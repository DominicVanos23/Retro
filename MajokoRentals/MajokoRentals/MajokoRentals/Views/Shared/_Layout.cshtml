@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Majoko Rentals</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/MajokoRentals.styles.css" asp-append-version="true" />

    <style>
        :root {
            --navy: #151A2C;
            --navy-2: #0F1427;
            --brand: #BAAA49;
            --text: #FFFFFF;
            --text-dim: #D7D9E1;
            --border: #ffffff2a;
            --shadow: 0 14px 38px rgba(0,0,0,.45);
            --radius: 16px;
            --ring: 0 0 0 3px rgba(186,170,73,.35);
        }

        body {
            background-color: var(--navy);
            color: white;
            font-family: Arial, sans-serif;
        }

        /* --- Navbar Styling (kept) --- */
        .navbar-custom {
            background-color: #151A2C !important;
            border-bottom: 2px solid #BAAA49;
            padding: 0.8rem 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .navbar-brand {
            display: flex;
            align-items: center;
            gap: 15px;
            text-decoration: none;
        }

        .nav-logo {
            height: 120px;
            width: auto;
            filter: drop-shadow(0 2px 8px rgba(0,0,0,0.5));
            transition: transform .3s ease;
        }

            .nav-logo:hover {
                transform: scale(1.05);
            }

        .nav-title {
            font-size: 2rem;
            font-weight: 700;
            color: #BAAA49;
            text-shadow: 0 2px 6px rgba(0,0,0,0.4);
            letter-spacing: 1px;
        }

        .navbar-toggler {
            border-color: #BAAA49;
        }

        .navbar-toggler-icon {
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23BAAA49' viewBox='0 0 30 30'%3E%3Cpath stroke='rgba%28186,170,73,1%29' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E");
        }

        /* --- Overlay (kept, slight polish) --- */
        #overlay {
            position: fixed;
            inset: 0;
            background-color: rgba(0,0,0,0.55);
            z-index: 1040;
            display: none;
            transition: opacity 0.25s ease;
        }

            #overlay.show {
                display: block;
            }

        /* ===============================
                   Polished GLASS Side Navigation
                   =============================== */
        .sidenav {
            position: fixed;
            top: 0;
            right: 0;
            height: 100%;
            width: 0; /* closed by default */
            max-width: 360px;
            z-index: 1050;
            overflow: hidden;
            transition: width .28s ease;
            padding: 0;
        }

            .sidenav.open {
                width: 320px;
            }
            /* open state */

            /* Glass panel layer */
            .sidenav .panel {
                position: absolute;
                inset: 0;
                background: linear-gradient(180deg, #ffffff29, #ffffff14);
                -webkit-backdrop-filter: blur(16px) saturate(140%);
                backdrop-filter: blur(16px) saturate(140%);
                border-left: 1px solid var(--border);
                box-shadow: var(--shadow);
                display: flex;
                flex-direction: column;
            }

        /* Header: close + brand/user block */
        .sn-header {
            position: relative;
            padding: 18px 18px 10px 18px;
            border-bottom: 1px solid var(--border);
            background: linear-gradient(180deg, #0b102255, transparent);
        }

        .sn-close {
            position: absolute;
            top: 10px;
            left: 12px;
            width: 36px;
            height: 36px;
            display: grid;
            place-items: center;
            border-radius: 10px;
            background: linear-gradient(180deg, #ffffff2a, #ffffff14);
            border: 1px solid var(--border);
            color: var(--brand);
            font-size: 22px;
            line-height: 1;
            cursor: pointer;
            transition: transform .15s ease, box-shadow .2s ease;
        }

            .sn-close:hover {
                transform: translateY(-1px);
                box-shadow: 0 6px 16px rgba(0,0,0,.35);
            }

        .sn-brand {
            display: flex;
            align-items: center;
            gap: 12px;
            padding-left: 52px;
        }

        .sn-avatar {
            width: 48px;
            height: 48px;
            border-radius: 50%;
            display: grid;
            place-items: center;
            background: linear-gradient(180deg, #e4d46d, #BAAA49);
            color: #151A2C;
            font-weight: 900;
            font-size: 20px;
            box-shadow: 0 6px 16px rgba(186,170,73,.35);
        }

        .sn-id {
            display: flex;
            flex-direction: column;
            gap: 2px;
        }

        .sn-name {
            font-weight: 700;
            color: #fff;
            font-size: 16px;
        }

        .sn-role {
            display: inline-flex;
            align-items: center;
            gap: 6px;
            padding: 3px 8px;
            border-radius: 999px;
            border: 1px solid var(--border);
            background: linear-gradient(180deg, #ffffff26, #ffffff12);
            color: var(--text-dim);
            font-size: 12px;
            font-weight: 600;
        }

        /* Sections & links */
        .sn-scroll {
            overflow: auto;
            padding: 10px 10px 16px 10px;
        }

        .sn-section {
            margin-top: 12px;
            padding: 8px 8px 6px;
        }

        .sn-title {
            color: var(--brand);
            font-size: 12px;
            letter-spacing: .8px;
            text-transform: uppercase;
            margin: 6px 8px 6px;
            opacity: .9;
        }

        .sn-link {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 12px 12px;
            margin: 4px 4px;
            text-decoration: none;
            color: #fff;
            border-radius: 12px;
            border: 1px solid transparent;
            background: linear-gradient(180deg, #ffffff18, #ffffff0c);
            transition: transform .12s ease, background .18s ease, border-color .18s ease, box-shadow .18s ease;
        }

            .sn-link .ico {
                width: 22px;
                text-align: center;
                opacity: .95;
            }

            .sn-link:hover {
                transform: translateX(-2px);
                background: linear-gradient(180deg, #ffffff26, #ffffff12);
                border-color: var(--border);
                box-shadow: 0 10px 20px rgba(0,0,0,.25);
                color: #fff;
            }

            .sn-link:focus-visible {
                outline: none;
                box-shadow: var(--ring);
            }

            /* Active state */
            .sn-link.active {
                border-color: var(--brand);
                box-shadow: 0 12px 26px rgba(186,170,73,.35);
                color: #121629;
                background: linear-gradient(180deg, #e4d46d, #BAAA49);
                font-weight: 700;
            }

        /* Divider */
        .sn-div {
            height: 1px;
            margin: 10px 8px;
            background: linear-gradient(90deg, transparent, #ffffff3a, transparent);
            border: none;
        }

        /* Footer action */
        .sn-footer {
            padding: 10px 12px 14px;
            border-top: 1px solid var(--border);
            background: linear-gradient(0deg, #0b102233, transparent);
        }

        .sn-btn {
            width: 100%;
            border: none;
            border-radius: 12px;
            padding: 10px 14px;
            font-weight: 800;
            letter-spacing: .2px;
            background: linear-gradient(180deg, #e4d46d, #BAAA49);
            color: #121629;
            cursor: pointer;
            transition: transform .12s ease, box-shadow .18s ease;
            box-shadow: 0 8px 20px rgba(186,170,73,.35);
        }

            .sn-btn:hover {
                transform: translateY(-1px);
                box-shadow: 0 14px 30px rgba(186,170,73,.45);
            }

        /* --- Footer (kept) --- */
        footer {
            background-color: #111732;
            color: #BAAA49;
            text-align: center;
            padding: 20px 0;
            margin-top: 50px;
        }

        /* --- Responsive --- */
        @@media (max-width: 768px) {
            .nav-logo

        {
            height: 80px;
        }

        .nav-title {
            font-size: 1.4rem;
        }

        .navbar-custom {
            padding: .6rem 1rem;
        }

        .sidenav.open {
            width: 88vw;
            max-width: 88vw;
        }

        }
    </style>
</head>
<body>
    @{
        var fullName = HttpContextAccessor.HttpContext?.Session.GetString("FullName") ?? "Guest";
        var Role = HttpContextAccessor.HttpContext?.Session.GetString("Role") ?? "Visitor";
        var isLoggedIn = !string.IsNullOrEmpty(HttpContextAccessor.HttpContext?.Session.GetString("FullName"));

        // Active link helpers
        var currentController = ViewContext.RouteData.Values["controller"]?.ToString() ?? "";
        var currentAction = ViewContext.RouteData.Values["action"]?.ToString() ?? "";
        bool IsActive(string controller, string? action = null)
        {
            if (!string.Equals(currentController, controller, System.StringComparison.OrdinalIgnoreCase)) return false;
            if (action == null) return true;
            return string.Equals(currentAction, action, System.StringComparison.OrdinalIgnoreCase);
        }

        string Initials(string name)
        {
            var parts = (name ?? "").Trim().Split(' ', System.StringSplitOptions.RemoveEmptyEntries);
            if (parts.Length == 0) return "M";
            if (parts.Length == 1) return parts[0].Substring(0, 1).ToUpperInvariant();
            return (parts[0].Substring(0, 1) + parts[^1].Substring(0, 1)).ToUpperInvariant();
        }
    }

    <div id="overlay" onclick="closeNav()" aria-hidden="true"></div>

    <!-- Header Navbar (kept) -->
    <header>
        <nav class="navbar navbar-custom">
            <div class="navbar-left">
                <a class="navbar-brand d-flex align-items-center" asp-controller="Home" asp-action="Index">
                    <img src="~/img/Mlogo.png" alt="Majoko Rentals Logo" class="nav-logo" />
                </a>
            </div>

            <button class="navbar-toggler" type="button" aria-label="Open menu" onclick="openNav()">
                <span class="navbar-toggler-icon"></span>
            </button>
        </nav>
    </header>

    <!-- =========================
         Polished Side Navigation
         ========================= -->
    <aside id="mySidenav" class="sidenav" aria-hidden="true" aria-label="Side navigation">
        <div class="panel">
            <div class="sn-header">
                <button class="sn-close" type="button" aria-label="Close menu" onclick="closeNav()">×</button>
                <div class="sn-brand">
                    <div class="sn-avatar">@Initials(fullName)</div>
                    <div class="sn-id">
                        <span class="sn-name">@fullName</span>
                        <span class="sn-role">@Role</span>
                    </div>
                </div>
            </div>

            <div class="sn-scroll">
                <div class="sn-section">
                    <div class="sn-title">Main</div>

                    <a href="@(Role is "Admin" or "Manager" ? Url.Action("AdminBoard", "DashBoard") : Url.Action("Index", "Home"))"
                       class="sn-link @(IsActive("Home", "Index") ? "active" : "")">
                        <span class="ico">🏠</span> Home
                    </a>

                    <a asp-controller="Listings" asp-action="Listings"
                       class="sn-link @(IsActive("Listings", "Listings") ? "active" : "")">
                        <span class="ico">🏢</span> Listings
                    </a>

                    @if (Role == "Admin" || Role == "Manager")
                    {
                        <a asp-controller="Listings" asp-action="AddListing"
                           class="sn-link @(IsActive("Listings", "AddListing") ? "active" : "")">
                            <span class="ico">➕</span> Add Listing
                        </a>
                        <a asp-controller="Listings" asp-action="ManageListing"
                           class="sn-link @(IsActive("Listings", "ManageListing") ? "active" : "")">
                            <span class="ico">🛠️</span> Manage Listings
                        </a>
                    }
                </div>

                <hr class="sn-div" />

                <div class="sn-section">
                    <div class="sn-title">Operations</div>

                    <a asp-controller="Application" asp-action="Application"
                       class="sn-link @(IsActive("Application", "Application") ? "active" : "")">
                        <span class="ico">📄</span> Applications
                    </a>

                    <a asp-controller="Tenant" asp-action="Tenant"
                       class="sn-link @(IsActive("Tenant", "Tenant") ? "active" : "")">
                        <span class="ico">👥</span> Tenant Management
                    </a>

                    <a asp-controller="Maintenance" asp-action="MaintenanceR"
                       class="sn-link @(IsActive("Maintenance", "MaintenanceR") ? "active" : "")">
                        <span class="ico">🔧</span> Maintenance Requests
                    </a>

                    @if (Role == "Admin" || Role == "Manager")
                    {
                        <a asp-controller="Reports" asp-action="Reports"
                           class="sn-link @(IsActive("Reports", "Reports") ? "active" : "")">
                            <span class="ico">📊</span> Reporting & Analysis
                        </a>
                    }

                    <a asp-controller="Communication" asp-action="Communication"
                       class="sn-link @(IsActive("Communication", "Communication") ? "active" : "")">
                        <span class="ico">💬</span> Communication
                    </a>
                </div>

                <hr class="sn-div" />

                <div class="sn-section">
                    <div class="sn-title">Account</div>

                    @if (isLoggedIn)
                    {
                        <a asp-controller="Account" asp-action="Logout" class="sn-link">
                            <span class="ico">🚪</span> Logout (@fullName)
                        </a>
                    }
                    else
                    {
                        <a asp-controller="Account" asp-action="Login" class="sn-link @(IsActive("Account", "Login") ? "active" : "")">
                            <span class="ico">🔑</span> Login
                        </a>
                        <a asp-controller="Account" asp-action="Register" class="sn-link @(IsActive("Account", "Register") ? "active" : "")">
                            <span class="ico">📝</span> Register
                        </a>
                    }
                </div>
            </div>

            <div class="sn-footer">
                <button class="sn-btn" type="button" onclick="closeNav()">Close Menu</button>
            </div>
        </div>
    </aside>

    <!-- Page Content -->
    <div class="container mt-4 mb-5">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <!-- Footer -->
    <footer>
        &copy; 2025 Majoko Rentals. All Rights Reserved.
    </footer>

    <!-- Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>

    <script>
        // Focus management & class toggling for accessibility
        let lastFocusedEl = null;

        function openNav() {
            const sidenav = document.getElementById("mySidenav");
            const overlay = document.getElementById("overlay");
            lastFocusedEl = document.activeElement;

            sidenav.classList.add("open");
            sidenav.setAttribute("aria-hidden", "false");
            overlay.classList.add("show");

            // Stagger-in animation for links
            sidenav.querySelectorAll(".sn-link").forEach((link, i) => {
                link.style.opacity = "0";
                link.style.transform = "translateX(16px)";
                setTimeout(() => {
                    link.style.transition = "opacity .22s ease, transform .22s ease";
                    link.style.opacity = "1";
                    link.style.transform = "translateX(0)";
                }, 40 * i);
            });

            // Focus first actionable element
            const first = sidenav.querySelector(".sn-close") || sidenav.querySelector(".sn-link");
            if (first) first.focus();
            // Escape to close
            document.addEventListener("keydown", escToClose);
        }

        function closeNav() {
            const sidenav = document.getElementById("mySidenav");
            const overlay = document.getElementById("overlay");

            sidenav.classList.remove("open");
            sidenav.setAttribute("aria-hidden", "true");
            overlay.classList.remove("show");

            document.removeEventListener("keydown", escToClose);
            if (lastFocusedEl) { try { lastFocusedEl.focus(); } catch (_) {} }
        }

        function escToClose(e){
            if (e.key === "Escape") closeNav();
        }
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
